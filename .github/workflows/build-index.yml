name: Build and Commit index.json with published date

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3Ô∏è‚É£ Build index.json
      - name: Build index.json
        run: |
          node -e "
          const fs = require('fs');
          const path = require('path');

          const postsDir = path.join(process.cwd(), 'Posts');
          const imagesDir = path.join(process.cwd(), 'Images');

          // Helper to extract published date from HTML
          function extractPublishedDate(html) {
            const match = html.match(/<p>üìÖ\s*([^<]+)<\/p>/i);
            return match ? match[1].trim() : null;
          }

          // Scan posts
          const posts = [];
          if (fs.existsSync(postsDir)) {
            fs.readdirSync(postsDir, { withFileTypes: true }).forEach(dir => {
              if (dir.isDirectory()) {
                const indexFile = path.join(postsDir, dir.name, 'index.html');
                if (fs.existsSync(indexFile)) {
                  const html = fs.readFileSync(indexFile, 'utf-8');
                  const stats = fs.statSync(indexFile);
                  posts.push({
                    folder: dir.name,
                    path: './Posts/' + dir.name + '/index.html',
                    published_date: extractPublishedDate(html),
                    last_modified: stats.mtime.toISOString()
                  });
                }
              }
            });
          }

          // Scan images
          const images = [];
          if (fs.existsSync(imagesDir)) {
            fs.readdirSync(imagesDir, { withFileTypes: true }).forEach(f => {
              if (f.isFile()) {
                images.push({ path: './Images/' + f.name, name: f.name });
              }
            });
          }

          // Write index.json
          fs.writeFileSync('index.json', JSON.stringify({ posts, images }, null, 2));
          console.log('index.json generated with published dates.');
          "

      # 4Ô∏è‚É£ Commit index.json back to repo
      - name: Commit index.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add index.json
          git diff --quiet || git commit -m "Auto-update index.json with published dates [skip ci]"
          git push
